name: CI/CD Pipeline for Lugx Gaming

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours to ensure reliability

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      KUBECONFIG_DATA: ${{ secrets.KUBECONFIG_DATA }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}

    - name: Build and Push Game Service
      uses: docker/build-push-action@v5
      with:
        context: ${{ github.workspace }}/game-service
        push: true
        tags: ${{ env.DOCKERHUB_USERNAME }}/game-service:latest

    - name: Build and Push Order Service
      uses: docker/build-push-action@v5
      with:
        context: ./order-service
        push: true
        tags: ${{ env.DOCKERHUB_USERNAME }}/order-service:latest

    - name: Build and Push Analytics Service
      uses: docker/build-push-action@v5
      with:
        context: ./analytics-service
        push: true
        tags: ${{ env.DOCKERHUB_USERNAME }}/analytics-service:latest

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3

    - name: Configure Kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "$KUBECONFIG_DATA" | base64 --decode > $HOME/.kube/config

    - name: Rolling Restart Kubernetes Deployments
      run: |
        kubectl rollout restart deployment game-service
        kubectl rollout restart deployment order-service
        kubectl rollout restart deployment analytics-service
        kubectl rollout restart deployment lugx-frontend

  integration-tests:
    runs-on: ubuntu-latest
    needs: build-and-deploy

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Run Postman Integration Tests
      uses: matt-ball/newman-action@v1
      with:
        collection: ./tests/integration-tests.postman_collection.json
        environment: ./tests/environment.postman_environment.json

    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      with:
        name: Integration Test Results
        path: newman/*

    - name: Fail if Tests Failed
      run: |
        grep 'failed": 0' newman/newman-run-report.json || exit 1
